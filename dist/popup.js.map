{"version":3,"file":"popup.js","sources":["webpack://pomodoro-go-ext/./src/popup/app.js","webpack://pomodoro-go-ext/./src/popup/components/AuthForm/SandboxLogin.js","webpack://pomodoro-go-ext/./src/popup/components/AuthForm/index.js","webpack://pomodoro-go-ext/./src/popup/components/Nav/NavButton.js","webpack://pomodoro-go-ext/./src/popup/components/Nav/index.js","webpack://pomodoro-go-ext/./src/popup/history.js","webpack://pomodoro-go-ext/./src/popup/routes.js","webpack://pomodoro-go-ext/./src/store/auth.js","webpack://pomodoro-go-ext/./src/store/index.js","webpack://pomodoro-go-ext/./src/store/sessions.js","webpack://pomodoro-go-ext/./src/popup/popup.tsx","webpack://pomodoro-go-ext/webpack/bootstrap","webpack://pomodoro-go-ext/webpack/runtime/chunk loaded","webpack://pomodoro-go-ext/webpack/runtime/compat get default export","webpack://pomodoro-go-ext/webpack/runtime/define property getters","webpack://pomodoro-go-ext/webpack/runtime/global","webpack://pomodoro-go-ext/webpack/runtime/hasOwnProperty shorthand","webpack://pomodoro-go-ext/webpack/runtime/make namespace object","webpack://pomodoro-go-ext/webpack/runtime/jsonp chunk loading","webpack://pomodoro-go-ext/webpack/startup"],"sourcesContent":["import React, { useEffect, useState, createContext } from 'react';\n\nimport Nav from './components/Nav';\nimport Routes from './routes';\nimport { makeStyles } from '@material-ui/core';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport { me } from '../store';\nimport { endSession, removeSession } from '../store/sessions';\nexport const SessionContext = createContext();\n\nconst useStyles = makeStyles(() => ({\n  main: {\n    height: '100%',\n    width: '100%',\n  },\n}));\nconst App = (props) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const currentSession = useSelector((state) => state.currentSession);\n  const auth = useSelector((state) => state.auth);\n  const [sessionTime, setSessionTime] = useState(0);\n  const [goal, setGoal] = useState('');\n  const [countDown, setCountDown] = useState(false);\n  const [intervalID, setIntervalID] = useState('');\n  useEffect(() => {\n    const timeLeft = localStorage.getItem('sessionTime');\n    if (parseInt(timeLeft) < 0) return;\n    if (!parseInt(timeLeft) && currentSession.id && countDown) {\n      props.endSession(currentSession.id, true);\n    }\n  }, [sessionTime]);\n  useEffect(() => {\n    if ((sessionTime, countDown)) {\n      const id = setInterval(() => {\n        setSessionTime((sessionTime) => {\n          localStorage.setItem('sessionTime', sessionTime - 1000);\n          return sessionTime - 1000;\n        });\n      }, 1000);\n      setIntervalID(id);\n    }\n    if (!countDown) {\n      clearInterval(intervalID);\n      setSessionTime(0);\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    if (window.localStorage.getItem('token')) {\n      dispatch(me());\n    }\n  }, [dispatch]);\n\n  return (\n    <div className={classes.main}>\n      <SessionContext.Provider\n        value={{\n          sessionTime,\n          setSessionTime,\n          goal,\n          setGoal,\n          countDown,\n          setCountDown,\n          intervalID,\n          setIntervalID,\n        }}\n      >\n        <Nav />\n        <Routes />\n      </SessionContext.Provider>\n    </div>\n  );\n};\n\nexport default connect(null, (dispatch) => {\n  return {\n    endSession: (sessionId, successful) =>\n      dispatch(endSession(sessionId, successful)),\n  };\n})(App);\n","import React, { useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { authenticate } from '../../../store';\nimport {\n  TextField,\n  Button,\n  Grid,\n  Paper,\n  Typography,\n  Link,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  login: {\n    padding: 10,\n    minWidth: 100,\n    flexGrow: 1,\n    width: '20vw',\n    position: 'fixed',\n    right: '39vw',\n    top: '30vh',\n  },\n  item: {\n    width: 200,\n    margin: 4,\n  },\n}));\n\nconst SandboxLogin = (props) => {\n  const { name, displayName, error, value } = props;\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  const loginToSandbox = (ev) => {\n    ev.preventDefault();\n    dispatch(authenticate('cody@mail.com', 'cody@mail.com', '123', 'login'));\n  };\n\n  return (\n    <div>\n      <form\n        id=\"sandboxLogin\"\n        onSubmit={loginToSandbox}\n        name={name}\n        value={value}\n      >\n        <Paper className={classes.login}>\n          <Grid container direction=\"column\" alignItems=\"center\">\n            {/* <Typography variant=\"h6\">Log In</Typography> */}\n            {/* <Typography align=\"center\" gutterBottom={true}>\n              {' '}\n              To use our sandbox account, simply click the button below:\n            </Typography> */}\n            <Button\n              onClick={loginToSandbox}\n              id=\"submit\"\n              variant=\"contained\"\n              type=\"submit\"\n              value={value}\n              color=\"primary\"\n              style={{\n                backgroundColor: '#5061a9',\n                color: 'white',\n                marginTop: '10px',\n              }}\n              className={classes.item}\n            >\n              Login To Sandbox\n            </Button>\n            <Grid item>\n              <Typography variant=\"caption\">\n                Log in to your own account\n                {`\n            `}\n              </Typography>\n\n              <Link variant=\"caption\" href={`${process.env.API_URL}/login`}>\n                here.\n              </Link>\n            </Grid>\n            <Grid item>\n              <Grid item>\n                <Typography variant=\"caption\">\n                  Need an account?\n                  {`\n            `}\n                </Typography>\n                <Link variant=\"caption\" href={`${process.env.API_URL}/signup`}>\n                  Sign up\n                </Link>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Paper>\n      </form>\n    </div>\n  );\n};\n\nconst mapSandboxLogin = (state) => {\n  return {\n    name: 'sandboxLogin',\n    displayName: 'Log In To Sandbox',\n    error: state.auth.error,\n  };\n};\n\nexport default connect(mapSandboxLogin)(SandboxLogin);\n","import React, { useState } from 'react';\nimport { connect, useDispatch } from 'react-redux';\nimport { authenticate } from '../../../store';\nimport {\n  TextField,\n  Button,\n  Grid,\n  Paper,\n  Typography,\n  Link,\n} from '@material-ui/core';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  login: {\n    padding: 10,\n    minWidth: 100,\n    flexGrow: 1,\n    width: '20vw',\n    position: 'absolute',\n    margin: 'auto',\n    top: '40%',\n    transform: 'translate(0, -50%)',\n  },\n  item: {\n    width: 200,\n    margin: 4,\n  },\n  signupButton: {\n    color: 'white',\n    margin: '10px',\n    borderRadius: 40,\n  },\n  signInTitle: {},\n}));\n\n/**\n * COMPONENT\n */\nconst AuthForm = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { name, displayName, error, value } = props;\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const onChange = (ev) => {\n    if (ev.target.name === 'username') {\n      setUsername(ev.target.value);\n    } else if (ev.target.name === 'email') {\n      setEmail(ev.target.value);\n    } else if (ev.target.name === 'password') {\n      setPassword(ev.target.value);\n    }\n  };\n\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n    let formName = 'signup';\n    if (!username) {\n      formName = 'login';\n    }\n    dispatch(authenticate(username, email, password, formName));\n  };\n\n  const loginToSandbox = (ev) => {\n    ev.preventDefault();\n    dispatch(authenticate('cody@mail.com', 'cody@mail.com', '123', 'login'));\n  };\n\n  return (\n    <div>\n      {/* script for google OAuth */}\n      <form id=\"login\" onSubmit={handleSubmit} name={name} value={value}>\n        {name === 'signup' ? (\n          <Paper className={classes.login}>\n            <Grid container direction=\"column\" alignItems=\"center\">\n              <Typography\n                variant=\"h6\"\n                style={{\n                  marginBottom: '20px',\n                }}\n              >\n                Sign Up for an Account\n              </Typography>\n              <TextField\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                value={username}\n                onChange={onChange}\n                variant=\"outlined\"\n                className={classes.item}\n                size=\"small\"\n              />\n              <Grid item>\n                <TextField\n                  id=\"email\"\n                  label=\"E-mail\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChange}\n                  variant=\"outlined\"\n                  className={classes.item}\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  type=\"password\"\n                  id=\"password\"\n                  label=\"Password\"\n                  name=\"password\"\n                  // type='password'\n                  value={password}\n                  onChange={onChange}\n                  variant=\"outlined\"\n                  className={classes.item}\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  className={classes.signupButton}\n                  onClick={handleSubmit}\n                  id=\"submit\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                  value={value}\n                  color=\"primary\"\n                >\n                  {displayName}\n                </Button>\n              </Grid>\n              <Grid item container direction=\"column\" alignItems=\"center\">\n                <Grid item>\n                  <Typography variant=\"caption\">\n                    Already have an account?\n                    {`\n              `}\n                  </Typography>\n                  <Link variant=\"caption\" href={`${process.env.API_URL}/login`}>\n                    Sign in\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"caption\">\n                    Or sign in to our sandbox account\n                    {`\n            `}\n                  </Typography>\n\n                  <Link\n                    variant=\"caption\"\n                    href={`${process.env.API_URL}/sandboxLogin`}\n                  >\n                    here.\n                  </Link>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        ) : (\n          <Paper className={classes.login}>\n            <Grid container direction=\"column\" alignItems=\"center\">\n              <Typography variant=\"h6\" className={classes.signInTitle}>\n                Sign In\n              </Typography>\n\n              <Grid item>\n                <TextField\n                  id=\"email\"\n                  label=\"E-mail\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChange}\n                  variant=\"outlined\"\n                  className={classes.item}\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  type=\"password\"\n                  id=\"password\"\n                  label=\"Password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChange}\n                  variant=\"outlined\"\n                  className={classes.item}\n                  size=\"small\"\n                />\n              </Grid>\n              <Grid item>\n                <Button\n                  onClick={handleSubmit}\n                  id=\"submit\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                  value={value}\n                  color=\"primary\"\n                  style={{\n                    backgroundColor: '#5061a9',\n                    color: 'white',\n                    marginTop: '10px',\n                  }}\n                  className={classes.item}\n                >\n                  {displayName}\n                </Button>\n              </Grid>\n              <Grid item>\n                <Typography variant=\"caption\">\n                  Sign in to our sandbox account\n                  {`\n            `}\n                </Typography>\n\n                <Link\n                  variant=\"caption\"\n                  href={`${process.env.API_URL}/sandboxLogin`}\n                >\n                  here.\n                </Link>\n              </Grid>\n              <Grid item>\n                <Grid item>\n                  <Typography variant=\"caption\">\n                    Need an account?\n                    {`\n            `}\n                  </Typography>\n                  <Link\n                    variant=\"caption\"\n                    href={`${process.env.API_URL}/signup`}\n                  >\n                    Sign up\n                  </Link>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        )}\n        {error && error.response && <div> {error.response.data} </div>}\n      </form>\n    </div>\n  );\n};\n\n/**\n * CONTAINER\n *   Note that we have two different sets of 'mapStateToProps' functions -\n *   one for Login, and one for Signup. However, they share the same 'mapDispatchToProps'\n *   function, and share the same Component. This is a good example of how we\n *   can stay DRY with interfaces that are very similar to each other!\n */\nconst mapLogin = (state) => {\n  return {\n    name: 'login',\n    displayName: 'Sign In',\n    error: state.auth.error,\n  };\n};\n\nconst mapSignup = (state) => {\n  return {\n    name: 'signup',\n    displayName: 'Sign Up',\n    error: state.auth.error,\n  };\n};\n\nexport const Login = connect(mapLogin)(AuthForm);\nexport const Signup = connect(mapSignup)(AuthForm);\n","import React, { useState } from 'react';\n\nimport { Button } from '@material-ui/core';\nimport { withStyles, useTheme } from '@material-ui/styles';\nconst NavButton = withStyles({\n  root: {\n    color: '#4d2a4e',\n    fontSize: 'medium',\n    textTransform: 'none',\n    fontWeight: 'bold',\n    fontFamily: ['Roboto', 'sans-serif'].join(','),\n  },\n})(Button);\n\nexport default NavButton;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { authenticateGoogle, logout, me } from '../../../store';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\n\nimport {\n  AppBar,\n  Grid,\n  Button,\n  Toolbar,\n  Typography,\n  MenuItem,\n  Menu,\n  Avatar,\n} from '@material-ui/core';\nimport { useTheme, makeStyles } from '@material-ui/styles';\nimport NavButton from './NavButton';\n\nconst Navbar = (props) => {\n  const theme = useTheme();\n  const useStyles = makeStyles({\n    header: {\n      color: 'black',\n      backgroundColor: '#ffffff00',\n      boxShadow: 'none',\n      height: 60,\n    },\n    button: {\n      color: theme.palette.text.primary,\n      fontSize: 'medium',\n      fontFamily: theme.typography.fontFamily,\n    },\n    login: { color: 'black' },\n    loggedIn: { justifyContent: 'flexEnd', width: 130 },\n    loggedOut: { justifyContent: 'flexEnd', width: 300 },\n    logo: { fontFamily: 'Righteous', color: 'black', fontSize: 34 },\n    signup: {\n      borderRadius: 40,\n      backgroundColor: 'black',\n      color: 'white',\n      fontSize: 14,\n    },\n    signIn: {\n      backgroundColor: '#ffffff00',\n      color: 'black',\n    },\n    sandboxLogin: {\n      backgroundColor: '#ffffff00',\n      color: 'black',\n    },\n  });\n  const classes = useStyles();\n\n  const [isGoogleLoggedIn, setIsGoogleLoggedIn] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [authInstance, setAuthInstance] = useState({});\n  const handleSuccess = (response) => {\n    props.getMe(response);\n  };\n  const handleFail = (response) => {};\n  const handleLogOut = () => {\n    clearInterval(window.timer);\n    setAnchorEl(null);\n    window.localStorage.clear();\n    props.handleClick();\n  };\n\n  const { isLoggedIn } = props;\n\n  return (\n    <div>\n      <nav id=\"navBar\">\n        {chrome.storage ? (\n          <AppBar position=\"static\" className={classes.header}>\n            <Toolbar>\n              <NavButton\n                className={classes.logo}\n                component={Link}\n                to=\"/timer\"\n                disableFocusRipple={true}\n                disableRipple={true}\n              >\n                PomodoroGo\n              </NavButton>\n            </Toolbar>\n          </AppBar>\n        ) : (\n          <AppBar position=\"static\" className={classes.header}>\n            <Toolbar>\n              <NavButton\n                className={classes.logo}\n                component={Link}\n                to=\"/timer\"\n                disableFocusRipple={true}\n                disableRipple={true}\n              >\n                PomodoroGo\n              </NavButton>\n              {isLoggedIn ? (\n                <>\n                  <NavButton\n                    className={classes.button}\n                    aria-label=\"timer\"\n                    component={Link}\n                    to=\"/timer\"\n                  >\n                    Timer\n                  </NavButton>\n                  <NavButton\n                    className={classes.button}\n                    id=\"dashboard\"\n                    component={Link}\n                    to=\"/dashboard\"\n                  >\n                    Dashboard\n                  </NavButton>\n                  <NavButton\n                    className={classes.button}\n                    id=\"blocksites\"\n                    component={Link}\n                    to=\"/blocksites\"\n                  >\n                    BlockList\n                  </NavButton>\n                  <NavButton\n                    className={classes.button}\n                    id=\"friends\"\n                    component={Link}\n                    to=\"/friends\"\n                  >\n                    Friends\n                  </NavButton>\n                </>\n              ) : (\n                <Grid container id=\"extension-login\">\n                  <Grid item>\n                    <Menu\n                      id=\"menu\"\n                      anchorEl={anchorEl}\n                      keepMounted\n                      open={Boolean(anchorEl)}\n                      aria-haspopup=\"true\"\n                      onClose={() => setAnchorEl(null)}\n                    >\n                      <MenuItem\n                        key=\"Login\"\n                        component={Link}\n                        onClick={() => setAnchorEl(null)}\n                        to=\"/login\"\n                      >\n                        Log In\n                      </MenuItem>\n                      <MenuItem\n                        key=\"sandboxLogin\"\n                        component={Link}\n                        onClick={() => setAnchorEl(null)}\n                        to=\"/sandboxLogin\"\n                      >\n                        Log In To Sandbox\n                      </MenuItem>\n                    </Menu>\n                  </Grid>\n                </Grid>\n              )}\n\n              {isLoggedIn ? (\n                <Grid container className={classes.loggedIn}>\n                  <Grid item>\n                    <Button onClick={handleLogOut}>Logout</Button>\n                  </Grid>\n                  <Grid item>\n                    <GoogleLogout\n                      clientId=\"811227993938-nd59os35t80qtuqgmul58232c54sbmsm.apps.googleusercontent.com\"\n                      buttonText=\"Logout\"\n                      onLogoutSuccess={handleLogOut}\n                      isSignedIn={props.isLoggedIn}\n                      render={(renderProps) => (\n                        <Avatar\n                          onClick={renderProps.onClick}\n                          src=\"https://i.pinimg.com/originals/a3/d5/8f/a3d58f0b2820871d486e9851c0fdbb60.jpg\"\n                        />\n                      )}\n                    ></GoogleLogout>\n                  </Grid>\n                </Grid>\n              ) : (\n                <Grid container className={classes.loggedOut}>\n                  <Grid item>\n                    <NavButton\n                      variant=\"text\"\n                      className={classes.sandboxLogin}\n                      component={Link}\n                      to=\"/sandboxLogin\"\n                    >\n                      Sandbox\n                    </NavButton>\n                  </Grid>\n                  <Grid>\n                    <NavButton\n                      variant=\"text\"\n                      className={classes.signIn}\n                      component={Link}\n                      to=\"/login\"\n                    >\n                      Sign In\n                    </NavButton>\n                  </Grid>\n                  <Grid>\n                    <NavButton\n                      variant=\"contained\"\n                      className={classes.signup}\n                      component={Link}\n                      to=\"/signup\"\n                    >\n                      Sign Up\n                    </NavButton>\n                  </Grid>\n                  <Grid item>\n                    <GoogleLogin\n                      clientId=\"811227993938-nd59os35t80qtuqgmul58232c54sbmsm.apps.googleusercontent.com\"\n                      buttonText=\"Login\"\n                      onSuccess={handleSuccess}\n                      onFailure={handleFail}\n                      cookiePolicy={'single_host_origin'}\n                      isSignedIn={props.isLoggedIn}\n                      redirectUri={`${process.env.API_URL}/timer`}\n                      render={(renderProps) => (\n                        <Avatar\n                          onClick={renderProps.onClick}\n                          src=\"https://img-authors.flaticon.com/google.jpg\"\n                        />\n                      )}\n                    />\n                  </Grid>\n                </Grid>\n              )}\n            </Toolbar>\n          </AppBar>\n        )}\n      </nav>\n    </div>\n  );\n};\n\n/**\n * CONTAINER\n */\nconst mapState = (state) => {\n  return {\n    isLoggedIn: !!state.auth.id,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    handleClick() {\n      dispatch(logout());\n    },\n    getMe(data) {\n      dispatch(authenticateGoogle(data));\n    },\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Navbar);\n","import {createMemoryHistory, createBrowserHistory} from 'history';\n\nconst history =\n  process.env.NODE_ENV === 'test'\n    ? createMemoryHistory()\n    : createBrowserHistory();\n\nexport default history;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport { Login, Signup } from './components/AuthForm';\nimport SandboxLogin from './components/AuthForm/SandboxLogin';\n// import CreateSession from './components/Timer/CreateSession';\n// import Timer from './components/Timer';\nimport Dashboard from '../components/Dashboard';\nimport { me } from '../store';\nimport { loadSessions } from '../store/sessions';\n// import { loadBlackList, updateBlackList } from '../store/blackList';\n// import { loadBlocks } from '../store/blocks';\n// import { loadSites } from '../store/sites';\n// import { getSites } from '../store/blockSites';\n// import BlockError from './components/BlockError';\n// import BlockSites from './components/BlockSites';\n// import Friends from './components/Friends/Friends';\n// import RedirectToSite from './components/RedirectToSite';\n// import About from './components/About';\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n  }\n  async componentDidMount() {\n    await this.props.loadInitialData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.auth && this.props.auth.id !== prevProps.auth.id) {\n      // await this.props.getSites(this.props.auth.id);\n    }\n    console.log('sending set-blocked-sites message');\n    console.log('chrome:', chrome);\n    console.log('chrome.runtime:', chrome.runtime);\n    chrome?.runtime?.sendMessage('kaghhmclljbnigfffgjhfbbbcpgenjoi', {\n      message: 'set-blocked-sites',\n      blockedSites: this.props.blockedSites.filter((each) => {\n        return each.blacklist.blockingEnabled === true;\n      }),\n      currUser: this.props.auth.id,\n    });\n    console.log('set-blocked-sites message sent');\n  }\n  render() {\n    const { isLoggedIn, auth, blackList, updateB } = this.props;\n    if (chrome.storage)\n      chrome.storage.onChanged.addListener(async (changes, areaName) => {\n        if (changes.updatedBlackList) {\n          const {\n            updatedBlackList: { oldValue, newValue },\n          } = changes;\n          if (!oldValue) {\n            updateB(newValue.id, newValue);\n          } else if (oldValue.blocks !== newValue.blocks) {\n            updateB(newValue.id, newValue);\n          }\n        }\n      });\n\n    return (\n      <div>\n        {/* {chrome.storage ? <RedirectToSite /> : null} */}\n        {isLoggedIn && !chrome.storage ? (\n          <Switch>\n            {/* <Route path=\"/timer\" component={Timer} /> */}\n            <Route path=\"/login\">\n              <Redirect to=\"/dashboard\" />\n            </Route>\n            <Route path=\"/sandboxLogin\">\n              <Redirect to=\"/dashboard\" />\n            </Route>\n            {/* <Route path=\"/\" exact component={Timer} /> */}\n            <Route path=\"/dashboard\" component={Dashboard} />\n            {/* <Route path=\"/timer\" exact component={CreateSession} /> */}\n            {/* <Route exact path=\"/blocksites\" component={BlockSites} />\n            <Route exact path=\"/friends\" component={Friends} />\n            <Route exact path=\"/uhoh\" component={BlockError} />\n            <Route path=\"/about\" component={About} /> */}\n          </Switch>\n        ) : (\n          <Switch>\n            {/* <Route path=\"/about\" component={About} /> */}\n            <Route path=\"/sandboxLogin\" component={SandboxLogin} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            {/* <Route exact path=\"/uhoh\" component={BlockError} /> */}\n          </Switch>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    isLoggedIn: !!state.auth.id,\n    sites: state.sites,\n    auth: state.auth,\n    blackList: state.blackList,\n    blockedSites: state.blockedSites,\n  };\n};\n\nconst mapDispatch = (dispatch) => {\n  return {\n    loadInitialData() {\n      dispatch(me());\n      dispatch(loadSessions());\n      // dispatch(loadSites());\n      // dispatch(loadBlackList());\n      // dispatch(loadBlocks());\n    },\n\n    // updateB: (blackListId, blackListInfo) => {\n    //   return dispatch(updateBlackList(blackListId, blackListInfo));\n    // },\n\n    // getSites: (userId) => {\n    //   return dispatch(getSites(userId));\n    // },\n  };\n};\n\nexport default withRouter(connect(mapState, mapDispatch)(Routes));\n","import axios from 'axios';\nimport history from '../popup/history';\nimport socketIOClient from 'socket.io-client';\n\nconst ENDPOINT = process.env.API_URL;\nexport const socket = socketIOClient(ENDPOINT);\n\nconst TOKEN = 'token';\nconst SPOTIFY_ACCESS_TOKEN = 'spotify_access_token';\nconst SPOTIFY_REFRESH_TOKEN = 'spotify_refresh_token';\nconst NEW_SPOTIFY_DEVICE = 'new-spotify-device';\n\n/**\n * ACTION TYPES\n */\nconst SET_AUTH = 'SET_AUTH';\n\n/**\n * ACTION CREATORS\n */\nconst setAuth = (auth) => ({ type: SET_AUTH, auth });\n\n/**\n * THUNK CREATORS\n */\nexport const me = () => async (dispatch) => {\n  const token = window.localStorage.getItem(TOKEN);\n  if (token) {\n    const res = await axios.get(`${process.env.API_URL}/auth/me`, {\n      headers: {\n        authorization: token,\n      },\n    });\n    return dispatch(setAuth(res.data));\n  }\n};\nexport const authenticateGoogle =\n  (data = {}) =>\n  async (dispatch) => {\n    try {\n      const response = await axios.post('/auth/google', data, {\n        headers: { authorization: data.tokenId },\n      });\n      window.localStorage.setItem('token', response.data.token);\n      dispatch(me());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\nexport const authenticate =\n  (username, email, password, method) => async (dispatch) => {\n    try {\n      const res = await axios.post(\n        `${process.env.API_URL}/auth/${method}`,\n        method === 'signup'\n          ? { username, email, password }\n          : { email, password }\n      );\n      window.localStorage.setItem(TOKEN, res.data.token);\n      dispatch(me());\n    } catch (authError) {\n      return dispatch(setAuth({ error: authError }));\n    }\n  };\n\nexport const logout = () => {\n  window.localStorage.removeItem(TOKEN);\n  window.localStorage.removeItem('user');\n  window.localStorage.removeItem('timerDone');\n  window.localStorage.removeItem(SPOTIFY_ACCESS_TOKEN);\n  window.localStorage.removeItem(SPOTIFY_REFRESH_TOKEN);\n  window.localStorage.removeItem(NEW_SPOTIFY_DEVICE);\n  history.push('/login');\n  return {\n    type: SET_AUTH,\n    auth: {},\n  };\n};\n\n/**\n * REDUCER\n */\nexport default function (state = {}, action) {\n  switch (action.type) {\n    case SET_AUTH:\n      if (action.auth.id) {\n        socket.emit('login', { userId: action.auth.id });\n      } else {\n        socket.emit('logout', { userId: state.id });\n      }\n      return action.auth;\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport auth from './auth';\nimport { sessionsReducer, currentSessionReducer } from './sessions';\n// import { sitesReducer } from './sites';\n// import { blackListReducer } from './blackList';\n// import { blocksReducer } from './blocks';\n// import blockedSitesReducer from './blockSites';\n// import playlistsReducer from './spotify/getPlaylists';\n// import currPlaylistReducer from './spotify/getCurrPlaylist';\n// import currPlaybackReducer from './spotify/getCurrPlayback';\n// import devicesReducer from './spotify/getDevices';\n// import recPlaylistsReducer from './spotify/getRecPlaylists';\n// import addToQueueReducer from './spotify/addToQueue';\n// import recentTrackReducer from './spotify/getRecentTrack';\n// import { myRequestReducer, requestToMeReducer } from './getFriends';\n// import allUsersReducer from './getAllUsers';\n// import { newFriendRequestReducer } from './addFriend';\n\nconst reducer = combineReducers({\n  auth,\n  blockedSites: blockedSitesReducer,\n  sessions: sessionsReducer,\n  sites: sitesReducer,\n  blackList: blackListReducer,\n  blocks: blocksReducer,\n  currentSession: currentSessionReducer,\n  // allPlaylists: playlistsReducer,\n  // currPlaylist: currPlaylistReducer,\n  // recPlaylists: recPlaylistsReducer,\n  // currPlayback: currPlaybackReducer,\n  // newlyAddedTrack: addToQueueReducer,\n  // devices: devicesReducer,\n  // recentTrack: recentTrackReducer,\n  // myRequests: myRequestReducer,\n  // requestsToMe: requestToMeReducer,\n  // allUsers: allUsersReducer,\n  // newFriendRequest: newFriendRequestReducer,\n});\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunkMiddleware, createLogger({ collapsed: true }))\n);\nconst store = createStore(reducer, middleware);\n\nexport default store;\nexport * from './auth';\n","import axios from 'axios';\nconst LOAD_SESSIONS = 'LOAD_SESSIONS';\nconst loadSessionsActionCreator = (sessions) => {\n  return {\n    type: LOAD_SESSIONS,\n    sessions,\n  };\n};\n\nconst loadSessions = () => {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(`${process.env.API_URL}/api/sessions`);\n      const sessions = response.data;\n      dispatch(loadSessionsActionCreator(sessions));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst LOAD_SESSION = 'LOAD_SESSION';\n\nconst loadSessionActionCreator = (session) => {\n  return {\n    type: LOAD_SESSION,\n    session,\n  };\n};\n\nconst loadSession = (sessionId) => async (dispatch) => {\n  try {\n    const res = await axios.get(\n      `${process.env.API_URL}/api/sessions/${sessionId}`\n    );\n    dispatch(loadSessionActionCreator(res.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst sessionsReducer = (state = [], action) => {\n  if (action.type === LOAD_SESSIONS) {\n    state = action.sessions;\n  }\n  return state;\n};\n\nconst CREATE_SESSION = 'CREATE_SESSION';\n\nconst createSessionActionCreator = (session) => {\n  return {\n    type: CREATE_SESSION,\n    session,\n  };\n};\nconst createSession = (userId, goal) => async (dispatch) => {\n  try {\n    const response = await axios.post(`${process.env.API_URL}/api/sessions`, {\n      userId,\n      goal,\n    });\n    const { data } = response;\n\n    localStorage.setItem('currentSession', JSON.stringify(data));\n    dispatch(createSessionActionCreator(data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst UPDATE_SESSION = 'UPDATE_SESSION';\n\nconst updateSessionActionCreator = (session) => {\n  return {\n    type: UPDATE_SESSION,\n    session,\n  };\n};\nconst updateSession = (sessionId, sessionInfo) => async (dispatch) => {\n  try {\n    const response = await axios.put(\n      `${process.env.API_URL}/api/sessions/${sessionId}`,\n      sessionInfo\n    );\n    const { data } = response;\n    window.localStorage.setItem('currentSession', JSON.stringify(data));\n    dispatch(updateSessionActionCreator(data));\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst END_SESSION = 'END_SESSION';\nconst REMOVE_SESSION = 'REMOVE_SESSION';\nexport const removeSession = () => {\n  return { type: REMOVE_SESSION };\n};\nexport const _endSession = (session) => {\n  return {\n    type: END_SESSION,\n  };\n};\n\nexport const endSession =\n  (sessionId, successful = false) =>\n  async (dispatch) => {\n    try {\n      let response = await axios.put(\n        `${process.env.API_URL}/api/sessions/${sessionId}/end`,\n        { successful }\n      );\n      if (response.data.status === 'Ongoing') {\n        response = await axios.put(\n          `${process.env.API_URL}/api/sessions/${sessionId}/end`,\n          { successful }\n        );\n      }\n      chrome.runtime.sendMessage('jgphbioennmnjogfbpchcgphelmfoiig', {\n        message: 'timer-done',\n      });\n\n      const updatedSession = response.data;\n      dispatch(_endSession());\n      localStorage.setItem('currentSession', null);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\nconst ADD_TASK = 'ADD_TASK';\n\nconst addTaskCreator = (session) => {\n  return {\n    type: ADD_TASK,\n    session,\n  };\n};\n\nconst addTask = (task, sessionId) => {\n  return async (dispatch) => {\n    const response = await axios.post(\n      `${process.env.API_URL}/api/sessions/${sessionId}/tasks`,\n      {\n        task,\n      }\n    );\n    const updatedSession = response.data;\n    dispatch(addTaskCreator(updatedSession));\n  };\n};\n\nconst DELETE_TASK = 'DELETE_TASK';\n\nconst deleteTaskCreator = (session) => {\n  return {\n    type: DELETE_TASK,\n    session,\n  };\n};\n\nconst deleteTask = (id, sessionId) => {\n  return async (dispatch) => {\n    const res = await axios.delete(\n      `${process.env.API_URL}/api/sessions/${sessionId}/tasks/${id}`\n    );\n    dispatch(deleteTaskCreator(res.data));\n  };\n};\n\nconst UPDATE_TASK = 'UPDATE_TASK';\n\nconst updateTaskActionCreator = (session) => {\n  return {\n    type: UPDATE_TASK,\n    session,\n  };\n};\n\nconst updateTask = (taskId, sessionId) => async (dispatch) => {\n  try {\n    const res = await axios.put(\n      `${process.env.API_URL}/api/sessions/${sessionId}/tasks/${taskId}`\n    );\n    dispatch(updateTaskActionCreator(res.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst currentSessionReducer = (state = {}, action) => {\n  if (\n    action.type === CREATE_SESSION ||\n    action.type === UPDATE_SESSION ||\n    action.type === ADD_TASK ||\n    action.type === DELETE_TASK ||\n    action.type === UPDATE_TASK ||\n    action.type === LOAD_SESSION\n  ) {\n    state = action.session;\n  } else if (\n    action.type === REMOVE_SESSION ||\n    action.type === 'LOG_OUT' ||\n    action.type === END_SESSION\n  ) {\n    return {};\n  }\n  return state;\n};\n\nexport {\n  loadSession,\n  loadSessions,\n  sessionsReducer,\n  currentSessionReducer,\n  addTask,\n  updateTask,\n  deleteTask,\n  createSession,\n  updateSession,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { ThemeProvider as MuiThemeProvider, createTheme, } from '@material-ui/core/styles';\nimport history from './history';\nimport store from '../store';\nimport App from './app';\nconst theme = createTheme({\n    palette: {\n        background: {\n            default: '#ffffff',\n            paper: '#ffffff',\n        },\n        error: {\n            contrastText: '#ffffff',\n            main: '#a83942',\n        },\n        primary: {\n            contrastText: '#e4ddee',\n            main: '#5061a9',\n        },\n        secondary: {\n            contrastText: '#9FE2BF',\n            main: '#5c4fa8',\n        },\n        success: {\n            contrastText: '#ffffff',\n            main: '#261689',\n        },\n        info: {\n            main: '#5061a9',\n        },\n        text: {\n            primary: '#4d2a4e',\n            secondary: '#9671a2',\n        },\n    },\n    typography: {\n        fontFamily: ['Roboto', 'sans-serif'].join(','),\n    },\n});\nReactDOM.render(React.createElement(Provider, { store: store },\n    React.createElement(MuiThemeProvider, { theme: theme },\n        React.createElement(Router, { history: history },\n            React.createElement(App, null)))), document.getElementById('app'));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"popup\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\t__webpack_require__.O();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpomodoro_go_ext\"] = self[\"webpackChunkpomodoro_go_ext\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_react-dom_index_js\",\"vendors-node_modules_material-ui_core_esm_Checkbox_Checkbox_js-node_modules_material-ui_core_-d5b6cb\",\"vendors-node_modules_material-ui_core_esm_AppBar_AppBar_js-node_modules_material-ui_core_esm_-4df537\",\"src_components_Dashboard_index_js\"], () => (__webpack_require__(\"./src/popup/popup.tsx\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AADA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AADA;AAiBA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;A;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AAFA;AAVA;AACA;AAeA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAZA;AAgBA;AAAA;AACA;AAAA;AAGA;AAGA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;A;;;;;;;;;;;;;;;;;;;;;;;;AC7GA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AApBA;AAuBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AADA;AAFA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AAVA;AAaA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAYA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAEA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AAIA;AACA;AAFA;AAWA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAYA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAZA;AAiBA;AAAA;AACA;AAAA;AAGA;AAIA;AACA;AAFA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAGA;AACA;AAFA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;;;;ACrRA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AADA;AAUA;AACA;A;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfcA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AANA;AAeA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AAJA;AASA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AATA;AAwBA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAPA;AAQA;AACA;AACA;AACA;A;;;;;;;;;;;;;AC1QA;AAEA;AAKA;AACA;A;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AAxEA;AACA;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAjBA;AAiBA;AACA;AACA;AACA;A;;;;;;;;;;;;;;;;;;;;;AC7HA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AADA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AATA;AAWA;AACA;A;;;;;;;;;;;;;;;;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAqBA;AACA;AAAA;AAEA;AAEA;AACA;AACA;A;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AAEA;AAGA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;;;;;;;AClNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC9CA;AACA;AACA;AACA;AACA;;;A","sourceRoot":""}